// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.vic = window.vic || {};

  window.vic.mvc = window.vic.mvc || {};

  vic.mvc.Event = (function() {
    function Event() {
      this.event = $('<div></div>');
    }

    return Event;

  })();

  vic.mvc.View = (function(_super) {
    __extends(View, _super);

    function View(_elem) {
      this._elem = _elem;
      View.__super__.constructor.call(this);
    }

    View.prototype.open = function() {
      return this._elem.fadeIn(400);
    };

    View.prototype.close = function() {
      return this._elem.fadeOut(400);
    };

    View.prototype.addListener = function() {};

    View.prototype.removeListener = function() {};

    return View;

  })(vic.mvc.Event);

  vic.mvc.Controller = (function(_super) {
    __extends(Controller, _super);

    function Controller(_view) {
      this._view = _view;
      Controller.__super__.constructor.call(this);
    }

    Controller.prototype.open = function() {
      this._view.open();
      return this.addListener();
    };

    Controller.prototype.close = function() {
      this.removeListener();
      return this._view.close();
    };

    Controller.prototype.addListener = function() {
      return this._view.addListener();
    };

    Controller.prototype.removeListener = function() {
      return this._view.removeListener();
    };

    return Controller;

  })(vic.mvc.Event);

}).call(this);
